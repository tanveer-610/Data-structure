#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node* left;
    struct node* right;
};
struct node* root=NULL;
main()
{
    int ch,n;
    printf("1.Insertion.\n2.Preorder Display.\n3.Postorder Display.\n4.Inorder Display.\n5.Exit.\n");
    while(1)
    {
        printf("\nEnter your choice = ");
        scanf("%d",&ch);
        switch(ch)
        {
        case 1:
            insertion();
            break;

        case 2 :
            print_preorder(root);
            break;
        case 3 :
           print_postorder(root);
            break;
        case 4:
            print_inorder(root);
            break;

        case 5:
            exit(0);
        default:
            printf("You enterd wrong number.\n");
        }
    }
}
void insertion()
{
    struct node* temp;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("Enter Tree info:");
    scanf("%d",&temp->data);
    temp->left=NULL;
    temp->right=NULL;

    if(root==NULL)
        root=temp;
    else
    {
        struct node* current=root,*parent;
        while(current)
        {
            parent=current;
            if(temp->data > current->data)
            {
                current=current->right;
            }
            else
                current=current->left;
        }
        if(temp->data > parent->data)
            parent->right=temp;
        else
            parent->left=temp;
    }
}
void print_preorder(struct node * tree)
{
    if (tree)
    {
        printf("%d\n",tree->data);
        print_preorder(tree->left);
        print_preorder(tree->right);
    }

}

void print_inorder(struct node * tree)
{
    if (tree)
    {
        print_inorder(tree->left);
        printf("%d\n",tree->data);
        print_inorder(tree->right);
    }
}
void print_postorder(struct node * tree)
{
    if (tree)
    {
        print_postorder(tree->left);
        print_postorder(tree->right);
        printf("%d\n",tree->data);
    }
}
