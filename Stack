#include<stdio.h>
#define capacity 5
int stack[capacity],top=-1;
void push(int ele)
{
    if(isFull())
    {
        printf("stack is overflow\n");
    }
    else
    {
        top++;
        stack[top]=ele;
        printf("%d pushed in the top\n",ele);
    }
}
int pop()
{

    if(top==-1)
        return 0;
    else
    {
    return stack[top--];

    }

}
int isFull()
{
    if(top==capacity-1)
        return 1;
    else
        return 0;
}
int isEmpty()
{
    if(top==-1)
        return 1;
    else
        return 0;

}
void peek()
{
    if(isEmpty())
        printf("stack is empty\n");
    else
        printf("peek item is:%d\n",stack[top]);
}
void traverse()
{
    if(isEmpty())
        printf("stack is empty\n");
    else
    {
        int i;
        printf("stack element is :\n");
        for(i=0; i<=top; i++)
            printf("%d\n",stack[i]);
    }

}

void main()
{
    int ch,e,item;
    while(1)
    {
        printf("1.Push\n");
        printf("2.Pop\n");
        printf("3.Peek\n");
        printf("4.Traverse\n");
        printf("5.Quite\n");
        printf("Enter your choice:");
        scanf("%d",&ch);
        switch(ch)
        {
        case 1:
            printf("enter element to push:\n");
            scanf("%d",&item);
            push(item);
            break;
        case 2:
            e== pop();
            if(item==0)
                printf("stack is underflow\n");
            else
                printf("popped item is :%d\n",item);

            break;
        case 3:
            peek();
            break;
        case 4:
            traverse();
            break;
        case 5:
            exit(0);

        default :
            printf("Invalid input\n");
        }
    }
}
